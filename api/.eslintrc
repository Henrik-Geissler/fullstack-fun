{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./api/tsconfig.json"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": [
    "react-hooks",
    "type-graphql",
    "notice",
    "no-loops",
    "promise",
    "sort-keys-fix",
    "this",
    "toplevel",
    "security",
    "optimize-regex",
    "filenames",
    "simple-import-sort"
  ],
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb-typescript",
    "plugin:type-graphql/recommended",
    "plugin:promise/recommended",
    "plugin:security/recommended",

    "canonical",
    //"canonical/jest",
    "canonical/node",
    "canonical/react",
    "canonical/typescript",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "notice/notice": [
      "error",
      {
        "mustMatch": "Copyright \\(c\\) [0-9]{0,4}, Henrik Gei√üler",
        "templateFile": "secrets/copyright.ts"
      }
    ],
    "filenames/match-regex": ["error", "^[a-z]{1}[a-zA-Z.]+$"],
    "filenames/match-exported": 2,
    "filenames/no-index": 0,

    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "sort-imports": "off",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",

    "optimize-regex/optimize-regex": "error",
    "no-loops/no-loops": "warn",
    "this/no-this": "error",
    "toplevel/no-toplevel-var": "error",
    "toplevel/no-toplevel-let": "error",
    "toplevel/no-toplevel-side-effect": "error",
    "sort-keys-fix/sort-keys-fix": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    //stylistic overwrite canonical
    "babel/object-curly-spacing": ["error", "always"],
    //"import/order": ["error", { "newlines-between": "always" }],
    "import/order": "off",

    //functional overwrite canonical
    "node/no-missing-import": [
      "error",
      {
        "tryExtensions": [".ts", ".tsx", ".js", ".json", ".node"]
      }
    ],
    "id-length": [
      "error",
      {
        "min": 4,
        "max": 24,
        "exceptions": ["i", "up", "app", "Int", "key", "req", "res", "url"]
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "import/no-unassigned-import": [
      "error",
      { "allow": ["reflect-metadata", "dotenv-safe/config"] }
    ],

    //security overwrite canonical
    "security/detect-object-injection": "error"
  },
  "overrides": [
    {
      "files": ["*/entities/*.ts"],
      "rules": {
        // Entities are classes named in Pascal
        "filenames/match-regex": ["error", "^[A-Z]{1}[a-zA-Z]+$"],
        "fp/no-class": "off",
        "import/no-cycle": "warn"
      }
    },
    {
      "files": ["*/migrations/*.ts"],
      "rules": {
        // Migrations are classes prefixed with Timestamps
        "filenames/match-regex": ["error", "^[0-9]+[-]{1}[A-Z]{1}[a-zA-Z]+$"],
        "fp/no-class": "off",
        "class-methods-use-this": "off"
      }
    },
    {
      "files": ["*/resolvers/*.ts"],
      "rules": {
        // Resolvers are classes named either Pascal or camel
        "filenames/match-regex": ["error", "^[a-zA-Z]+$"],
        "fp/no-class": "off"
      }
    }
  ]
}
